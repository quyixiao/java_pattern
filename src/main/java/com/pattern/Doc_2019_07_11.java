package com.pattern;

public class Doc_2019_07_11 {
    // 在很多的情况下，缺乏经验的 java 设计师之所以选择继承关系描述两个类之间的关系，是因为对继承关系不理解不够造成的，而要正确地使用
    // 一般来说，对违反里氏替换原则的设计进行重构时，可以采用两个办法，一是加入一个抽象类超类，这一办法已经是本书的里氏替换原则 ，一章
    // 中讨论过，二是继承关系改写成合成聚合关系，这一点是本章讨论的重点
    // 区分 Has-A 与 is-A 是严格的分类学意义上的定义，意思是一个类是另一个类的一种而 Has-A 则不同，它表示某一个角色的具体一项责任
    // 导致
}
